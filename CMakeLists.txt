CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(kernel)

FIND_PROGRAM(CMAKE_ASM_NASM_COMPILER NAMES yasm)
FIND_PROGRAM(CMAKE_LINKER NAMES ld)

ENABLE_LANGUAGE(ASM_NASM)

SET(CMAKE_ASM_NASM_COMPILE_OBJECT "<CMAKE_ASM_NASM_COMPILER> <INCLUDES> <FLAGS> -o <OBJECT> <SOURCE>")
SET(CMAKE_C_LINK_EXECUTABLE "<CMAKE_LINKER> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")
SET(CMAKE_LINKER_FLAGS "-melf_i386")

SET(CMAKE_ASM_NASM_FLAGS "-felf -g dwarf2")

SET(CMAKE_C_STANDARD 99)
SET(CMAKE_C_FLAGS_RELEASE "")
SET(CMAKE_C_FLAGS_DEBUG "-g3")
SET(CMAKE_C_FLAGS "-m32 -fno-pic -fno-pie -nostdlib -nostdinc -fno-builtin -fno-stack-protector -fno-asynchronous-unwind-tables")

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} -T ${CMAKE_CURRENT_SOURCE_DIR}/link.ld")

FILE(GLOB_RECURSE SRC_FILES "src/*.c")
FILE(GLOB_RECURSE ASM_FILES "src/*.s")

INCLUDE_DIRECTORIES(include)

SET_SOURCE_FILES_PROPERTIES(${ASM_FILES} PROPERTIES LANGUAGE ASM_NASM)
ADD_EXECUTABLE(${PROJECT_NAME} ${ASM_FILES} ${SRC_FILES})